StokesDT provides an object-oriented function interface which can be easily used to develop customized hydrodynamic simulation codes. These APIs are wrapped in static libraries, which can be found in _*install/lib*_. For each main computational kernel in Brownian/Stokesian simulations, StokesDT defines a group of C++ classes, and each of them implements a different method for computing the kernel. Each group of classes generally consists of a base class that contains the abstract interface and a number of derived classes that implements the computational kernels. The base classes defined in StokesDT and their brief descriptions are listed as follows:

|| Base class || Description ||
|| [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_base.html MobBase] ||Abstract base class for constructing mobility matrix||
|| [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_brwn_base.html BrwnBase] ||Abstract base class for computing brownian displacement vectors||
|| [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_force_base.html ForceBase] ||Abstract base class for computing forces||
|| [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_rnd_stream.html RndStream] ||Random number generator||
|| [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_verlet_list_base.html VerletListBase] ||Abstract base class for Verlet list||

A detailed description of the StokeSDT library and its APIs can be found [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html here]. The StokesDT library can be used for the following purposes.
 * [API#Computing_Mobility_Matrices Computing Mobility Matrices]
 * [API#Computing_Brownian_Displacements/Forces Computing Brownian Displacements/Forces]
 * [API#Computing_External_Forces Computing External Forces]
 * [API#Generating_Random_Vectors Generating Random Vectors]
 * [API#Computing_Verlet_Cell_List Computing Verlet Cell List]

==Computing Mobility Matrices==
The base class [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_base.html MobBase] and its derived classes can be used to compute mobilit matrices. These classes and their brief descriptions are listed as follows:

|| Class || Description ||
|| [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_base.html MobBase] ||Abstract base class for constructing mobility matrix||
||[http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_matrix.html MobMatrix]||Abstract base class for explicitly constructing and storing mobilit matrices||
||[http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_direct.html, MobDirect]||Computes mobility matrices with free boundary conditions ||
||[http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_ewald.html MobEwald]||Computes mobility matrices using Ewald summations||
||[http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_spme.html MobSpme]||Computes mobility matrix using SPME||

An example of using the derived classes of [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_base.html MobBase]:
{{{
// Create a MobEwald object
MobBase *mob = new MobEwald(npos, rdi, box_size, 1.0e-12);
if (!mob->Init()) {
    return false;
}

// Return the dimension of the Mobility matrix
int nm = mob->dim();
int ldm = nm;
// Update the particle positions
mob->Update(pos, rdi);

// Return the mobility matrix
double *mat = (double *)malloc(sizeof(double) * nm * ldm);
if (mat != NULL) {
    return false;
}
mob->GetMatrix(ldm, mat);

// Multiply the Mobility matrix by a vector
// v = alpha * mat + beta * v
mob_ewald->MulVector(num_rhs, alpha, ldm, f, beta, ldm, v);
}}}

 
==Computing Brownian Displacements/Forces==
The base class [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_brwn_base.html BrwnBase] and its derived classes can be used to compute mobilit matrices. These classes and their brief descriptions are listed as follows:

|| [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_brwn_base.html BrwnBase] ||Abstract base class for computing brownian displacement vectors||
||[http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_brwn_chol.html BrwnChol]||Computes Brownian displacement vectors using Cholesky factorization||
||[http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_brwn_lanczos.html BrwnLanczos]||Compute Brownian displacement vectors using the Krylov subspace method||
||[http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_brwn_random.html BrwnRandom]||Computes Brownian displacement vectors using randomized sampling||

An example of using the derived classes of [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_brwn_base.html BrwnBase]:
{{{
// Create a mobility matrix object
MobEwald *mob = new MobEwald(npos, rdi, box_size, 1.0e-12);
if (!mob->Init()) {
    return false;
}

// Generate a normal distribution random vector
int nm = mob->dim();
int ldm = nm;
double *z = (double *)malloc(sizeof(double) * ldm);
if (z == NULL) {
    return false;
}
RndStream *rnd = new RndStream(1234);
if (!rnd->Init()) {
    return false;
}
rnd->Gaussian(0.0, 1.0, 1, nm, ldm, z);

// Create a BrwnLanczos object
BrwnBase *lanczos = new BrwnLanczos(nm, 100, 10, 1.0e-7);
assert(lanczos->Init());

// Compute a Brownian displacement vector y 
double *y = (double *)malloc(sizeof(double) * ldm * num_rhs);
if (y == NULL) {
    return false;
}
lanczos->Compute(mob, 1, ldm, z, ldm, y);    

// destroy the BrwnLanczos object
delete lanczos;
}}}

==Computing External Forces==
The base class [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_base.html MobBase] and its derived classes can be used to compute mobilit matrices. These classes and their brief descriptions are listed as follows:

==Generating Random Vectors==
The base class [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_base.html MobBase] and its derived classes can be used to compute mobilit matrices. These classes and their brief descriptions are listed as follows:

==Computing Verlet Cell List==
The base class [http://www.cc.gatech.edu/~xliu66/stokesdt/doc/html/classstokesdt_1_1_mob_base.html MobBase] and its derived classes can be used to compute mobilit matrices. These classes and their brief descriptions are listed as follows: